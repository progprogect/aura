const { PrismaClient } = require('@prisma/client')

const prisma = new PrismaClient({
  datasources: {
    db: {
      url: "postgresql://postgres:AEXabgipqvhbLSwunyuZfLBgwtZsgHjg@hopper.proxy.rlwy.net:40277/railway"
    }
  }
})

async function checkSlugs() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º slug\'—ã —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤...')
    
    const specialists = await prisma.specialist.findMany({
      select: {
        id: true,
        firstName: true,
        lastName: true,
        slug: true,
        category: true
      }
    })
    
    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤: ${specialists.length}`)
    console.log('\nüë• Slug\'—ã —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤:')
    
    specialists.forEach((spec, index) => {
      console.log(`${index + 1}. ${spec.firstName} ${spec.lastName} (${spec.category})`)
      console.log(`   Slug: "${spec.slug}"`)
      console.log(`   URL: /specialist/${spec.slug}`)
      console.log('')
    })
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å
    const slugs = specialists.map(s => s.slug)
    const uniqueSlugs = [...new Set(slugs)]
    
    if (slugs.length === uniqueSlugs.length) {
      console.log('‚úÖ –í—Å–µ slug\'—ã —É–Ω–∏–∫–∞–ª—å–Ω—ã')
    } else {
      console.log(`‚ö†Ô∏è –ù–∞–π–¥–µ–Ω—ã –¥—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è slug\'—ã: ${slugs.length - uniqueSlugs.length}`)
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç slug'–æ–≤
    const invalidSlugs = slugs.filter(slug => {
      return !/^[a-z0-9-]+$/.test(slug) || slug.includes(' ') || slug.startsWith('-') || slug.endsWith('-')
    })
    
    if (invalidSlugs.length === 0) {
      console.log('‚úÖ –í—Å–µ slug\'—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ')
    } else {
      console.log(`‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ slug\'—ã: ${invalidSlugs.length}`)
      invalidSlugs.forEach(slug => console.log(`   - "${slug}"`))
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message)
  } finally {
    await prisma.$disconnect()
  }
}

checkSlugs()
