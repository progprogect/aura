/**
 * –§–æ—Ä–º–∞ –≤—Ö–æ–¥–∞ –¥–ª—è —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤
 */

'use client'

import { useState } from 'react'
import { motion, AnimatePresence } from 'framer-motion'
import { Button } from '@/components/ui/button'
import { Input } from '@/components/ui/input'
import { Label } from '@/components/ui/label'
import { Alert, AlertDescription } from '@/components/ui/alert'
import { PhoneInput } from '@/components/auth/PhoneInput'
import { SMSCodeInput } from '@/components/auth/SMSCodeInput'
import { AuthProviderButtons } from '@/components/auth/AuthProviderButtons'
import { Clock, AlertCircle, CheckCircle2 } from 'lucide-react'
import { useRouter, useSearchParams } from 'next/navigation'
import { useEffect, Suspense } from 'react'

type LoginStep = 'phone' | 'code' | 'success'

export function AuthLoginForm() {
  const [step, setStep] = useState<LoginStep>('phone')
  const [phone, setPhone] = useState('')
  const [code, setCode] = useState('')
  const [loading, setLoading] = useState(false)
  const [error, setError] = useState('')
  const [codeExpiry, setCodeExpiry] = useState<Date | null>(null)
  const [timeLeft, setTimeLeft] = useState(0)
  const router = useRouter()
  const searchParams = useSearchParams()

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—à–∏–±–∫–∏ –≤ URL (–æ—Ç OAuth)
  useEffect(() => {
    const error = searchParams.get('error')
    if (error) {
      setError(decodeURIComponent(error))
      // –û—á–∏—â–∞–µ–º URL –æ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –æ—à–∏–±–∫–∏
      const newUrl = new URL(window.location.href)
      newUrl.searchParams.delete('error')
      window.history.replaceState({}, '', newUrl.toString())
    }
  }, [searchParams])

  // –¢–∞–π–º–µ—Ä –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –æ—Ç—Å—á—ë—Ç–∞
  useState(() => {
    if (!codeExpiry) return

    const timer = setInterval(() => {
      const now = new Date()
      const diff = codeExpiry.getTime() - now.getTime()
      
      if (diff <= 0) {
        setTimeLeft(0)
        clearInterval(timer)
      } else {
        setTimeLeft(Math.floor(diff / 1000))
      }
    }, 1000)

    return () => clearInterval(timer)
  })

  const formatTime = (seconds: number) => {
    const mins = Math.floor(seconds / 60)
    const secs = seconds % 60
    return `${mins}:${secs.toString().padStart(2, '0')}`
  }

  const handleSendSMS = async () => {
    if (!phone) {
      setError('–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞')
      return
    }

    setLoading(true)
    setError('')

    try {
      const response = await fetch('/api/auth/send-sms', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ phone, purpose: 'login' })
      })

      const result = await response.json()

      if (result.success) {
        setStep('code')
        setCodeExpiry(new Date(Date.now() + 5 * 60 * 1000)) // 5 –º–∏–Ω—É—Ç
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–¥ –≤ alert (–≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ SMS –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞)
        if (result.code) {
          alert(`üîê –í–∞—à –∫–æ–¥ –¥–ª—è –≤—Ö–æ–¥–∞: ${result.code}\n\n(–ö–æ–¥ —Ç–∞–∫–∂–µ –≤—ã–≤–µ–¥–µ–Ω –≤ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞)`)
          console.log(`üîê SMS –ö–û–î: ${result.code}`)
        }
      } else {
        setError(result.error || '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ SMS')
      }
    } catch (err) {
      setError('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.')
    } finally {
      setLoading(false)
    }
  }

  const handleVerifyCode = async () => {
    // –£–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏—Ä—É—é—â—É—é –≤–∞–ª–∏–¥–∞—Ü–∏—é - SMSCodeInput —É–∂–µ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–ª–∏–Ω—É
    setLoading(true)
    setError('')

    try {
      const response = await fetch('/api/auth/login', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ phone, code, provider: 'phone' })
      })

      const result = await response.json()

      if (result.success) {
        setStep('success')
        // –¢–æ–∫–µ–Ω —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ cookies —Å–µ—Ä–≤–µ—Ä–æ–º, —Ä–µ–¥–∏—Ä–µ–∫—Ç–∏–º
        setTimeout(() => {
          router.push('/specialist/dashboard')
        }, 1500)
      } else {
        setError(result.error || '–ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥')
      }
    } catch (err) {
      setError('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.')
    } finally {
      setLoading(false)
    }
  }

  const handleSocialLogin = async (provider: string) => {
    // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ OAuth –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
    window.location.href = `/api/auth/${provider}`
  }

  const handleResendCode = async () => {
    setCode('')
    await handleSendSMS()
  }

  return (
    <div className="space-y-6">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="text-center">
        <h1 className="text-3xl font-bold text-foreground mb-2">
          –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!
        </h1>
        <p className="text-muted-foreground">
          –í–æ–π–¥–∏—Ç–µ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞
        </p>
      </div>

      {/* –§–æ—Ä–º–∞ */}
      <div className="bg-card rounded-xl shadow-lg border p-6 space-y-6">
        <AnimatePresence mode="wait">
        {/* –®–∞–≥ 1: –í–≤–æ–¥ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ */}
        {step === 'phone' && (
          <motion.div
            key="phone"
            initial={{ opacity: 0, x: 20 }}
            animate={{ opacity: 1, x: 0 }}
            exit={{ opacity: 0, x: -20 }}
            className="space-y-4"
          >
            <div className="space-y-2">
              <Label htmlFor="phone">–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞</Label>
              <PhoneInput
                value={phone}
                onChange={setPhone}
                onEnter={handleSendSMS}
                disabled={loading}
                placeholder="+7 (999) 123-45-67"
              />
            </div>

            {error && (
              <Alert variant="destructive">
                <AlertCircle className="h-4 w-4" />
                <AlertDescription>{error}</AlertDescription>
              </Alert>
            )}

            <Button
              onClick={handleSendSMS}
              disabled={loading || !phone}
              className="w-full"
              size="lg"
            >
              {loading ? '–û—Ç–ø—Ä–∞–≤–ª—è–µ–º...' : '–ü–æ–ª—É—á–∏—Ç—å –∫–æ–¥'}
            </Button>

            {/* –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏ */}
            <AuthProviderButtons
              onProviderClick={handleSocialLogin}
              mode="login"
              disabled={loading}
            />
          </motion.div>
        )}

        {/* –®–∞–≥ 2: –í–≤–æ–¥ –∫–æ–¥–∞ */}
        {step === 'code' && (
          <motion.div
            key="code"
            initial={{ opacity: 0, x: 20 }}
            animate={{ opacity: 1, x: 0 }}
            exit={{ opacity: 0, x: -20 }}
            className="space-y-4"
          >
            <div className="text-center space-y-2">
              <h3 className="text-lg font-semibold">–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∏–∑ SMS</h3>
              <p className="text-sm text-muted-foreground">
                –ú—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –∫–æ–¥ –Ω–∞ –Ω–æ–º–µ—Ä {phone}
              </p>
            </div>

            <SMSCodeInput
              value={code}
              onChange={setCode}
              onComplete={handleVerifyCode}
              disabled={loading}
              length={4}
            />

            {/* –¢–∞–π–º–µ—Ä */}
            {timeLeft > 0 && (
              <div className="flex items-center justify-center gap-2 text-sm text-muted-foreground">
                <Clock className="w-4 h-4" />
                <span>–ö–æ–¥ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω {formatTime(timeLeft)}</span>
              </div>
            )}

            {error && (
              <Alert variant="destructive">
                <AlertCircle className="h-4 w-4" />
                <AlertDescription>{error}</AlertDescription>
              </Alert>
            )}

            <div className="space-y-3">
              <Button
                onClick={handleVerifyCode}
                disabled={loading || code.length !== 4}
                className="w-full"
                size="lg"
              >
                {loading ? '–ü—Ä–æ–≤–µ—Ä—è–µ–º...' : '–í–æ–π—Ç–∏'}
              </Button>

              <Button
                variant="ghost"
                onClick={handleResendCode}
                disabled={loading || timeLeft > 0}
                className="w-full"
              >
                {timeLeft > 0 ? `–ü–æ–≤—Ç–æ—Ä–∏—Ç—å —á–µ—Ä–µ–∑ ${formatTime(timeLeft)}` : '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ'}
              </Button>
            </div>

            <Button
              variant="ghost"
              onClick={() => setStep('phone')}
              className="w-full"
            >
              –ò–∑–º–µ–Ω–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
            </Button>
          </motion.div>
        )}

        {/* –®–∞–≥ 3: –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥ */}
        {step === 'success' && (
          <motion.div
            key="success"
            initial={{ opacity: 0, scale: 0.9 }}
            animate={{ opacity: 1, scale: 1 }}
            className="text-center space-y-4 py-8"
          >
            <div className="w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto">
              <CheckCircle2 className="w-8 h-8 text-green-600" />
            </div>
            
            <div className="space-y-2">
              <h3 className="text-lg font-semibold">–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</h3>
              <p className="text-sm text-muted-foreground">
                –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç...
              </p>
            </div>
          </motion.div>
        )}
      </AnimatePresence>
    </div>

    {/* –°—Å—ã–ª–∫–∞ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é */}
    <div className="text-center">
      <p className="text-sm text-muted-foreground">
        –ï—â—ë –Ω–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞?{' '}
        <a 
          href="/auth/register" 
          className="text-primary hover:text-primary/80 font-medium transition-colors"
        >
          –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
        </a>
      </p>
    </div>
  </div>
  )
}
