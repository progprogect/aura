'use client'

/**
 * üß™ –ü–∞–Ω–µ–ª—å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –±–µ–∑ SMS –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –Ω–æ–º–µ—Ä–∞ –∏ –∫–æ–¥—ã –ø—Ä—è–º–æ –≤ UI
 */

import { useState } from 'react'
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'
import { Button } from '@/components/ui/button'
import { Badge } from '@/components/ui/badge'
import { Copy, Phone, Key, UserPlus, LogIn } from 'lucide-react'
import { toast } from 'sonner'

// ========================================
// –¢–ï–°–¢–û–í–´–ï –î–ê–ù–ù–´–ï
// ========================================

const TEST_PHONES = [
  {
    phone: '+79999999999',
    code: '1234',
    name: '–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 1',
    description: '–°—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç'
  },
  {
    phone: '+78888888888', 
    code: '5678',
    name: '–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 2',
    description: '–°—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç'
  },
  {
    phone: '+77777777777',
    code: '9999', 
    name: '–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 3',
    description: '–°—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç'
  },
  {
    phone: '+79151234567',
    code: '1234',
    name: '–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
    description: '–ë—É–¥–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω'
  }
] as const

// ========================================
// –ö–û–ú–ü–û–ù–ï–ù–¢
// ========================================

interface TestAuthPanelProps {
  className?: string
}

export function TestAuthPanel({ className }: TestAuthPanelProps) {
  const [copiedPhone, setCopiedPhone] = useState<string | null>(null)
  const [copiedCode, setCopiedCode] = useState<string | null>(null)

  // ========================================
  // –£–¢–ò–õ–ò–¢–´
  // ========================================

  const copyToClipboard = async (text: string, type: 'phone' | 'code', phone?: string) => {
    try {
      await navigator.clipboard.writeText(text)
      
      if (type === 'phone') {
        setCopiedPhone(phone || text)
        setTimeout(() => setCopiedPhone(null), 2000)
        toast.success('–ù–æ–º–µ—Ä —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω!')
      } else {
        setCopiedCode(text)
        setTimeout(() => setCopiedCode(null), 2000)
        toast.success('–ö–æ–¥ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω!')
      }
    } catch (error) {
      toast.error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å')
    }
  }

  // ========================================
  // –†–ï–ù–î–ï–†
  // ========================================

  return (
    <Card className={`border-2 border-orange-200 bg-orange-50 ${className}`}>
      <CardHeader>
        <CardTitle className="flex items-center gap-2 text-orange-800">
          üß™ –¢–µ—Å—Ç–æ–≤–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
        </CardTitle>
        <CardDescription className="text-orange-700">
          –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–∏ –Ω–æ–º–µ—Ä–∞ –∏ –∫–æ–¥—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–µ–∑ SMS –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
        </CardDescription>
      </CardHeader>
      
      <CardContent className="space-y-4">
        {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ */}
        <div className="p-3 bg-blue-50 border border-blue-200 rounded-lg">
          <h4 className="font-medium text-blue-900 mb-2">üìã –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:</h4>
          <ol className="text-sm text-blue-800 space-y-1">
            <li>1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞</li>
            <li>2. –í—Å—Ç–∞–≤—å—Ç–µ –≤ –ø–æ–ª–µ "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞"</li>
            <li>3. –ù–∞–∂–º–∏—Ç–µ "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–æ–¥"</li>
            <li>4. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–æ–¥ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã –Ω–∏–∂–µ</li>
            <li>5. –í—Å—Ç–∞–≤—å—Ç–µ –∫–æ–¥ –∏ –≤–æ–π–¥–∏—Ç–µ</li>
          </ol>
        </div>

        {/* –¢–µ—Å—Ç–æ–≤—ã–µ –Ω–æ–º–µ—Ä–∞ */}
        <div className="space-y-3">
          <h4 className="font-medium text-gray-900 flex items-center gap-2">
            <Phone className="w-4 h-4" />
            –¢–µ—Å—Ç–æ–≤—ã–µ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤
          </h4>
          
          <div className="grid gap-3">
            {TEST_PHONES.map((testData) => (
              <div 
                key={testData.phone}
                className="flex items-center justify-between p-3 bg-white border border-gray-200 rounded-lg hover:border-gray-300 transition-colors"
              >
                <div className="flex-1">
                  <div className="flex items-center gap-2 mb-1">
                    <span className="font-mono text-sm font-medium">
                      {testData.phone}
                    </span>
                    <Badge variant="secondary" className="text-xs">
                      {testData.name}
                    </Badge>
                  </div>
                  <p className="text-xs text-gray-600">
                    {testData.description}
                  </p>
                </div>
                
                <div className="flex items-center gap-2">
                  <span className="font-mono text-sm font-medium text-green-600">
                    {testData.code}
                  </span>
                  <Button
                    size="sm"
                    variant="outline"
                    onClick={() => copyToClipboard(testData.phone, 'phone')}
                    className="h-7 w-7 p-0"
                  >
                    <Copy className="w-3 h-3" />
                  </Button>
                </div>
              </div>
            ))}
          </div>
        </div>

        {/* –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
        <div className="space-y-3">
          <h4 className="font-medium text-gray-900 flex items-center gap-2">
            <Key className="w-4 h-4" />
            –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
          </h4>
          
          <div className="grid grid-cols-2 gap-3">
            <Button
              variant="outline"
              size="sm"
              onClick={() => copyToClipboard('+79999999999', 'phone')}
              className="flex items-center gap-2"
            >
              <UserPlus className="w-3 h-3" />
              –¢–µ—Å—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
            </Button>
            
            <Button
              variant="outline"
              size="sm"
              onClick={() => copyToClipboard('+79999999999', 'phone')}
              className="flex items-center gap-2"
            >
              <LogIn className="w-3 h-3" />
              –¢–µ—Å—Ç –≤—Ö–æ–¥–∞
            </Button>
          </div>
        </div>

        {/* –°—Ç–∞—Ç—É—Å —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ä–µ–∂–∏–º–∞ */}
        <div className="p-3 bg-green-50 border border-green-200 rounded-lg">
          <div className="flex items-center gap-2 text-green-800">
            <div className="w-2 h-2 bg-green-500 rounded-full"></div>
            <span className="text-sm font-medium">
              –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º –∞–∫—Ç–∏–≤–µ–Ω
            </span>
          </div>
          <p className="text-xs text-green-700 mt-1">
            SMS –∫–æ–¥—ã –≤—ã–≤–æ–¥—è—Ç—Å—è –≤ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ –∏ —Ç–µ—Ä–º–∏–Ω–∞–ª
          </p>
        </div>

        {/* –ö–æ–Ω—Å–æ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã */}
        <div className="p-3 bg-gray-50 border border-gray-200 rounded-lg">
          <h4 className="font-medium text-gray-900 mb-2 text-sm">
            üîß –î–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤:
          </h4>
          <div className="space-y-1 text-xs font-mono text-gray-700">
            <div>// –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞:</div>
            <div className="text-blue-600">console.log('[TEST SMS]')</div>
            <div>// –ò–ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–∫—Ä–∏–ø—Ç:</div>
            <div className="text-blue-600">npx ts-node scripts/test-auth.ts</div>
          </div>
        </div>
      </CardContent>
    </Card>
  )
}

// ========================================
// –≠–ö–°–ü–û–†–¢ –î–ê–ù–ù–´–• –î–õ–Ø –î–†–£–ì–ò–• –ö–û–ú–ü–û–ù–ï–ù–¢–û–í
// ========================================

export { TEST_PHONES }
