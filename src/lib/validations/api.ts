import { z } from 'zod'

// –°—Ö–µ–º—ã –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–ª—è API —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤
export const GetSpecialistsQuerySchema = z.object({
  category: z.string().optional(),
  experience: z.enum(['0-2', '2-5', '5+', 'any']).optional(),
  format: z.string().optional(), // –ë—É–¥–µ—Ç –ø–∞—Ä—Å–∏—Ç—å—Å—è –∫–∞–∫ –º–∞—Å—Å–∏–≤
  verified: z.enum(['true', 'false']).optional(),
  sortBy: z.enum(['relevance', 'rating', 'experience', 'price', 'newest', 'oldest']).optional(),
  search: z.string().max(100).optional(),
  page: z.coerce.number().min(1).max(100).optional(),
  limit: z.coerce.number().min(1).max(50).optional(),
})

export const ConsultationRequestSchema = z.object({
  specialistId: z.string().cuid(),
  name: z.string().min(2).max(100),
  contact: z.string().min(5).max(100), // Email –∏–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω
  message: z.string().max(1000).optional(),
})

export const AnalyticsRequestSchema = z.object({
  specialistId: z.string().cuid(),
  contactType: z.string().optional(), // –î–ª—è contact-view
})

// –°—Ö–µ–º—ã –¥–ª—è —Å–∏—Å—Ç–µ–º—ã —É—Å–ª—É–≥ –∏ –∑–∞–∫–∞–∑–æ–≤
export const CreateServiceSchema = z.object({
  title: z.string().min(5, '–ú–∏–Ω–∏–º—É–º 5 —Å–∏–º–≤–æ–ª–æ–≤').max(100, '–ú–∞–∫—Å–∏–º—É–º 100 —Å–∏–º–≤–æ–ª–æ–≤'),
  description: z.string().min(20, '–ú–∏–Ω–∏–º—É–º 20 —Å–∏–º–≤–æ–ª–æ–≤').max(1000, '–ú–∞–∫—Å–∏–º—É–º 1000 —Å–∏–º–≤–æ–ª–æ–≤'),
  highlights: z.array(z.string()).min(1, '–î–æ–±–∞–≤—å—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –ø—É–Ω–∫—Ç').max(5, '–ú–∞–∫—Å–∏–º—É–º 5 –ø—É–Ω–∫—Ç–æ–≤'),
  price: z.number().min(1, '–ú–∏–Ω–∏–º—É–º 1').max(999999, '–ú–∞–∫—Å–∏–º—É–º 999999'),
  deliveryDays: z.number().min(1).max(90).optional().nullable(),
  emoji: z.string().default('üíº'),
})

export const UpdateServiceSchema = z.object({
  title: z.string().min(5).max(100).optional(),
  description: z.string().min(20).max(1000).optional(),
  highlights: z.array(z.string()).min(1).max(5).optional(),
  price: z.number().min(1).max(999999).optional(),
  deliveryDays: z.number().min(1).max(90).optional().nullable(),
  emoji: z.string().optional(),
  isActive: z.boolean().optional(),
})

export const CreateOrderSchema = z.object({
  serviceId: z.string().cuid('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID —É—Å–ª—É–≥–∏'),
  clientName: z.string().min(2, '–ú–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞').max(100, '–ú–∞–∫—Å–∏–º—É–º 100 —Å–∏–º–≤–æ–ª–æ–≤'),
  clientContact: z.string().min(5, '–ú–∏–Ω–∏–º—É–º 5 —Å–∏–º–≤–æ–ª–æ–≤').max(100, '–ú–∞–∫—Å–∏–º—É–º 100 —Å–∏–º–≤–æ–ª–æ–≤'),
  clientMessage: z.string().max(500, '–ú–∞–∫—Å–∏–º—É–º 500 —Å–∏–º–≤–æ–ª–æ–≤').optional().nullable(),
  pointsUsed: z.number().int().min(1, '–ú–∏–Ω–∏–º—É–º 1 –±–∞–ª–ª').max(999999, '–ú–∞–∫—Å–∏–º—É–º 999999 –±–∞–ª–ª–æ–≤'),
})

export const UpdateOrderStatusSchema = z.object({
  status: z.enum(['pending', 'paid', 'in_progress', 'completed', 'cancelled', 'disputed']),
  disputeReason: z.string().optional().nullable(),
})

// –°—Ö–µ–º—ã –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –∑–∞—è–≤–æ–∫ (User Requests)
export const CreateRequestSchema = z.object({
  title: z.string().min(5, '–ú–∏–Ω–∏–º—É–º 5 —Å–∏–º–≤–æ–ª–æ–≤').max(100, '–ú–∞–∫—Å–∏–º—É–º 100 —Å–∏–º–≤–æ–ª–æ–≤'),
  description: z.string().min(50, '–ú–∏–Ω–∏–º—É–º 50 —Å–∏–º–≤–æ–ª–æ–≤').max(2000, '–ú–∞–∫—Å–∏–º—É–º 2000 —Å–∏–º–≤–æ–ª–æ–≤'),
  category: z.string().min(1, '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é'),
  budget: z.number().int().min(50, '–ú–∏–Ω–∏–º—É–º 50 –±–∞–ª–ª–æ–≤').max(2000, '–ú–∞–∫—Å–∏–º—É–º 2000 –±–∞–ª–ª–æ–≤').optional().nullable(),
})

export const CreateProposalSchema = z.object({
  message: z.string().min(50, '–ú–∏–Ω–∏–º—É–º 50 —Å–∏–º–≤–æ–ª–æ–≤').max(1000, '–ú–∞–∫—Å–∏–º—É–º 1000 —Å–∏–º–≤–æ–ª–æ–≤'),
  proposedPrice: z.number().int().min(50, '–ú–∏–Ω–∏–º—É–º 50 –±–∞–ª–ª–æ–≤').max(2000, '–ú–∞–∫—Å–∏–º—É–º 2000 –±–∞–ª–ª–æ–≤'),
})

export const AcceptProposalSchema = z.object({
  proposalId: z.string().cuid('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –æ—Ç–∫–ª–∏–∫–∞'),
})

export const CreateReviewSchema = z.object({
  orderId: z.string().cuid('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID –∑–∞–∫–∞–∑–∞'),
  rating: z.number().int().min(0, '–†–µ–π—Ç–∏–Ω–≥ –æ—Ç 0').max(5, '–†–µ–π—Ç–∏–Ω–≥ –¥–æ 5'),
  comment: z.string().max(1000, '–ú–∞–∫—Å–∏–º—É–º 1000 —Å–∏–º–≤–æ–ª–æ–≤').optional().nullable(),
})

// –¢–∏–ø—ã –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –∫–æ–¥–µ
export type GetSpecialistsQuery = z.infer<typeof GetSpecialistsQuerySchema>
export type ConsultationRequest = z.infer<typeof ConsultationRequestSchema>
export type AnalyticsRequest = z.infer<typeof AnalyticsRequestSchema>
export type CreateServiceInput = z.infer<typeof CreateServiceSchema>
export type UpdateServiceInput = z.infer<typeof UpdateServiceSchema>
export type CreateOrderInput = z.infer<typeof CreateOrderSchema>
export type UpdateOrderStatusInput = z.infer<typeof UpdateOrderStatusSchema>
export type CreateRequestInput = z.infer<typeof CreateRequestSchema>
export type CreateProposalInput = z.infer<typeof CreateProposalSchema>
export type AcceptProposalInput = z.infer<typeof AcceptProposalSchema>
export type CreateReviewInput = z.infer<typeof CreateReviewSchema>
