/**
 * Preview utilities - —ç–∫—Å–ø–æ—Ä—Ç –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
 * Re-export —Ñ—É–Ω–∫—Ü–∏–π –∏–∑ preview/utils
 */

import { FileText, Image as ImageIcon, Link as LinkIcon, Gift, LucideIcon } from 'lucide-react'
import type { LeadMagnetType } from '@/types/lead-magnet'

// Re-export –æ—Å–Ω–æ–≤–Ω—ã—Ö —É—Ç–∏–ª–∏—Ç
export {
  getFileExtension,
  isYouTubeUrl,
  getYouTubeThumbnail,
  getLeadMagnetBadgeColor,
  getLeadMagnetPreviewData,
  getFileTypeByExtension as getFileType,
  getContentIcon,
  getContentGradient
} from './preview/utils/helpers'

/**
 * –ü–æ–ª—É—á–∏—Ç—å –≥—Ä–∞–¥–∏–µ–Ω—Ç –¥–ª—è –ø—Ä–µ–≤—å—é –ø–æ —Ç–∏–ø—É (Tailwind classes)
 */
export function getPreviewGradient(type: string, fileExtension?: string): string {
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º getContentGradient –∫–∞–∫ base, –Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º Tailwind –∫–ª–∞—Å—Å—ã
  switch (type) {
    case 'file':
      if (fileExtension === 'pdf') {
        return 'from-red-500 to-orange-500'
      }
      return 'from-blue-500 to-indigo-500'
    case 'link':
      return 'from-purple-500 to-pink-500'
    case 'service':
      return 'from-green-500 to-emerald-500'
    default:
      return 'from-gray-500 to-gray-600'
  }
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å –∏–∫–æ–Ω–∫—É —Ñ–∞–π–ª–∞ –ø–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—é
 */
export function getFileIcon(fileExtension?: string): LucideIcon {
  if (!fileExtension) return FileText

  switch (fileExtension) {
    case 'pdf':
      return FileText
    case 'jpg':
    case 'jpeg':
    case 'png':
    case 'webp':
    case 'gif':
      return ImageIcon
    default:
      return FileText
  }
}

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –º–µ—Ç–∞-–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏
 */
export function formatCardMeta(
  type: LeadMagnetType,
  fileSize?: string | null,
  downloadCount?: number,
  fileExtension?: string
): string {
  const parts: string[] = []

  // –¢–∏–ø
  if (type === 'file') {
    parts.push('–§–∞–π–ª')
    if (fileExtension) {
      parts.push(fileExtension.toUpperCase())
    }
  } else if (type === 'link') {
    parts.push('–°—Å—ã–ª–∫–∞')
  } else if (type === 'service') {
    parts.push('–£—Å–ª—É–≥–∞')
  }

  // –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
  if (fileSize) {
    parts.push(fileSize)
  }

  // –°–∫–∞—á–∏–≤–∞–Ω–∏—è
  if (downloadCount && downloadCount > 0) {
    parts.push(`${downloadCount} —Å–∫–∞—á–∏–≤–∞–Ω–∏–π`)
  }

  return parts.join(' ‚Ä¢ ')
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å —Ü–≤–µ—Ç badge –¥–ª—è –∞—É–¥–∏—Ç–æ—Ä–∏–∏
 */
export function getAudienceBadgeColor(targetAudience?: string | null): string {
  if (!targetAudience) return 'bg-gray-100 text-gray-700'
  
  const lower = targetAudience.toLowerCase()
  
  if (lower.includes('–Ω–æ–≤–∏—á–∫') || lower.includes('–Ω–∞—á–∏–Ω–∞—é—â')) {
    return 'bg-green-100 text-green-700'
  }
  
  if (lower.includes('–ø—Ä–æ–¥–≤–∏–Ω') || lower.includes('–ø—Ä–æ—Ñ–∏')) {
    return 'bg-purple-100 text-purple-700'
  }
  
  return 'bg-blue-100 text-blue-700'
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å value badges –¥–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏
 */
export function getValueBadges(leadMagnet: {
  type: LeadMagnetType
  targetAudience?: string | null
  downloadCount?: number
}): Array<{ label: string; color: string }> {
  const badges: Array<{ label: string; color: string }> = []

  // –ü–æ–ø—É–ª—è—Ä–Ω—ã–π (–µ—Å–ª–∏ –º–Ω–æ–≥–æ —Å–∫–∞—á–∏–≤–∞–Ω–∏–π)
  if (leadMagnet.downloadCount && leadMagnet.downloadCount > 100) {
    badges.push({
      label: 'üî• –ü–æ–ø—É–ª—è—Ä–Ω–æ',
      color: 'bg-orange-500 text-white'
    })
  }

  // –ù–æ–≤–æ–µ (–º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –ø–æ –¥–∞—Ç–µ —Å–æ–∑–¥–∞–Ω–∏—è)
  
  return badges
}

