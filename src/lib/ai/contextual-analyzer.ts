/**
 * –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —É–º–Ω—ã—Ö –ø–æ–¥—Å–∫–∞–∑–æ–∫
 * –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ª–∏—á–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å –∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
 */

import { openai, MODELS, CHAT_CONFIG } from './openai'
import { PersonalProfile } from './personal-questions-generator'
import { CategoryKey } from '@/config/app'

export interface ContextualHint {
  id: string
  condition: string
  hint: string
  recommendation: string
  icon: string
  priority: 'high' | 'medium' | 'low'
}

export interface ContextualInsights {
  hints: ContextualHint[]
  skipConditions: string[]
  personalizedRecommendations: string[]
  compatibilityScore: number
}

export interface PersonalizationScore {
  genderCompatibility: number
  ageAppropriateness: number
  experienceLevel: number
  communicationStyle: number
  problemSpecificity: number
  culturalFit: number
  overall: number
}

/**
 * –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ª–∏—á–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å –∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏
 */
export async function analyzePersonalContext(
  profile: PersonalProfile,
  problem: string,
  category: CategoryKey | null
): Promise<ContextualInsights> {
  const prompt = buildContextualAnalysisPrompt(profile, problem, category)
  
  try {
    const response = await openai.chat.completions.create({
      model: MODELS.CHAT,
      messages: [
        { role: 'system', content: prompt },
        { role: 'user', content: `–ü—Ä–æ—Ñ–∏–ª—å: ${JSON.stringify(profile)}, –ü—Ä–æ–±–ª–µ–º–∞: ${problem}, –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${category}` }
      ],
      temperature: CHAT_CONFIG.temperature,
      max_tokens: 1000,
      response_format: { type: 'json_object' }
    })

    const content = response.choices[0]?.message?.content
    if (!content) {
      throw new Error('No response from OpenAI')
    }

    const result = JSON.parse(content) as {
      hints: ContextualHint[]
      skipConditions: string[]
      personalizedRecommendations: string[]
      compatibilityScore: number
    }

    return {
      hints: result.hints || [],
      skipConditions: result.skipConditions || [],
      personalizedRecommendations: result.personalizedRecommendations || [],
      compatibilityScore: result.compatibilityScore || 0
    }
  } catch (error) {
    console.error('[ContextualAnalyzer] Error:', error)
    
    // Fallback - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –±–∞–∑–æ–≤—ã–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏
    return getFallbackInsights(profile, category)
  }
}

/**
 * –°—Ç—Ä–æ–∏—Ç –ø—Ä–æ–º–ø—Ç –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞
 */
function buildContextualAnalysisPrompt(profile: PersonalProfile, problem: string, category: CategoryKey | null): string {
  return `–¢—ã ‚Äî —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤.

–ó–ê–î–ê–ß–ê: –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –ª–∏—á–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–π —É–º–Ω—ã–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞.

–ü–†–ê–í–ò–õ–ê:
1. –ì–µ–Ω–µ—Ä–∏—Ä—É–π –ø–æ–¥—Å–∫–∞–∑–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏ –æ–ø—ã—Ç–∞
2. –£—á–∏—Ç—ã–≤–∞–π –ø–æ–ª, –≤–æ–∑—Ä–∞—Å—Ç, –æ–ø—ã—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
3. –ü—Ä–µ–¥–ª–∞–≥–∞–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
4. –û–±—ä—è—Å–Ω—è–π, –ø–æ—á–µ–º—É —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ –≤–∞–∂–Ω—ã

–ü–†–ò–ú–ï–†–´ –ü–û–î–°–ö–ê–ó–û–ö:
- "–ú—É–∂—á–∏–Ω–∞–º –æ–±—ã—á–Ω–æ –±–æ–ª—å—à–µ –ø–æ–¥—Ö–æ–¥—è—Ç —Å–∏–ª–æ–≤—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏"
- "–î–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç—Ä–µ–≤–æ–≥–æ–π –æ–ø—ã—Ç —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –∫—Ä–∏—Ç–∏—á–µ–Ω"
- "–ñ–µ–Ω—â–∏–Ω–∞–º —á–∞—Å—Ç–æ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–µ–µ —Å –∂–µ–Ω—â–∏–Ω–∞–º–∏-–ø—Å–∏—Ö–æ–ª–æ–≥–∞–º–∏"
- "–ú–æ–ª–æ–¥—ã–º –ª—é–¥—è–º –ø–æ–¥—Ö–æ–¥—è—Ç –±–æ–ª–µ–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –º–µ—Ç–æ–¥—ã"

–£–°–õ–û–í–ò–Ø –î–õ–Ø –ü–û–î–°–ö–ê–ó–û–ö:
- gender === 'male' && category === 'fitness' ‚Üí —Å–∏–ª–æ–≤—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
- gender === 'female' && category === 'psychology' ‚Üí –∫–æ–º—Ñ–æ—Ä—Ç —Å –∂–µ–Ω—â–∏–Ω–∞–º–∏-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º–∏
- age === 'young' && category === 'nutrition' ‚Üí —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–æ–¥—Ö–æ–¥—ã
- experience === 'none' && category === 'psychology' ‚Üí —Ç–µ—Ä–ø–µ–ª–∏–≤—ã–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã
- age === 'mature' && category === 'fitness' ‚Üí —â–∞–¥—è—â–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã

–í–ï–†–ù–ò JSON:
{
  "hints": [
    {
      "id": "gender_fitness",
      "condition": "gender === 'male' && category === 'fitness'",
      "hint": "–ú—É–∂—á–∏–Ω–∞–º –æ–±—ã—á–Ω–æ –±–æ–ª—å—à–µ –ø–æ–¥—Ö–æ–¥—è—Ç —Å–∏–ª–æ–≤—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ñ–∏—Ç–Ω–µ—Å",
      "recommendation": "–†–µ–∫–æ–º–µ–Ω–¥—É—é —Ç—Ä–µ–Ω–µ—Ä–æ–≤ —Å –æ–ø—ã—Ç–æ–º —Ä–∞–±–æ—Ç—ã —Å –º—É–∂—á–∏–Ω–∞–º–∏",
      "icon": "üí™",
      "priority": "high"
    }
  ],
  "skipConditions": [
    "if age < 25 && category === 'medicine' then skip 'chronic_conditions'"
  ],
  "personalizedRecommendations": [
    "–ò—â–∏—Ç–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ —Å –æ–ø—ã—Ç–æ–º —Ä–∞–±–æ—Ç—ã —Å –≤–∞—à–µ–π –≤–æ–∑—Ä–∞—Å—Ç–Ω–æ–π –≥—Ä—É–ø–ø–æ–π"
  ],
  "compatibilityScore": 85
}

–ö–†–ò–¢–ò–ß–ù–û:
- –ì–µ–Ω–µ—Ä–∏—Ä—É–π —Ç–æ–ª—å–∫–æ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏
- –ò—Å–ø–æ–ª—å–∑—É–π –ø–æ–Ω—è—Ç–Ω—ã–π —è–∑—ã–∫
- –ü—Ä–µ–¥–ª–∞–≥–∞–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
- –£—á–∏—Ç—ã–≤–∞–π –∫—É–ª—å—Ç—É—Ä–Ω—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏`
}

/**
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –±–∞–∑–æ–≤—ã–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏ –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
 */
function getFallbackInsights(profile: PersonalProfile, category: CategoryKey | null): ContextualInsights {
  const hints: ContextualHint[] = []
  
  // –ë–∞–∑–æ–≤—ã–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–æ–ª–∞
  if (profile.gender === 'male' && category === 'fitness') {
    hints.push({
      id: 'male_fitness',
      condition: 'gender === male && category === fitness',
      hint: '–ú—É–∂—á–∏–Ω–∞–º –æ–±—ã—á–Ω–æ –±–æ–ª—å—à–µ –ø–æ–¥—Ö–æ–¥—è—Ç —Å–∏–ª–æ–≤—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏',
      recommendation: '–†–µ–∫–æ–º–µ–Ω–¥—É—é —Ç—Ä–µ–Ω–µ—Ä–æ–≤ —Å –æ–ø—ã—Ç–æ–º —Ä–∞–±–æ—Ç—ã —Å –º—É–∂—á–∏–Ω–∞–º–∏',
      icon: 'üí™',
      priority: 'high'
    })
  }
  
  if (profile.gender === 'female' && category === 'psychology') {
    hints.push({
      id: 'female_psychology',
      condition: 'gender === female && category === psychology',
      hint: '–ñ–µ–Ω—â–∏–Ω–∞–º —á–∞—Å—Ç–æ –∫–æ–º—Ñ–æ—Ä—Ç–Ω–µ–µ —Å –∂–µ–Ω—â–∏–Ω–∞–º–∏-–ø—Å–∏—Ö–æ–ª–æ–≥–∞–º–∏',
      recommendation: '–†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ –∂–µ–Ω—Å–∫–æ–≥–æ –ø–æ–ª–∞',
      icon: 'üë©',
      priority: 'medium'
    })
  }
  
  // –ë–∞–∑–æ–≤—ã–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–æ–∑—Ä–∞—Å—Ç–∞
  if (profile.age === 'young' && category === 'nutrition') {
    hints.push({
      id: 'young_nutrition',
      condition: 'age === young && category === nutrition',
      hint: '–ú–æ–ª–æ–¥—ã–º –ª—é–¥—è–º –ø–æ–¥—Ö–æ–¥—è—Ç –±–æ–ª–µ–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–æ–¥—Ö–æ–¥—ã –∫ –ø–∏—Ç–∞–Ω–∏—é',
      recommendation: '–ò—â–∏—Ç–µ –Ω—É—Ç—Ä–∏—Ü–∏–æ–ª–æ–≥–æ–≤ —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –º–µ—Ç–æ–¥–∞–º–∏',
      icon: 'ü•ó',
      priority: 'medium'
    })
  }
  
  return {
    hints,
    skipConditions: [],
    personalizedRecommendations: ['–ò—â–∏—Ç–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ —Å –æ–ø—ã—Ç–æ–º —Ä–∞–±–æ—Ç—ã —Å –≤–∞—à–µ–π –≤–æ–∑—Ä–∞—Å—Ç–Ω–æ–π –≥—Ä—É–ø–ø–æ–π'],
    compatibilityScore: 70
  }
}

/**
 * –í—ã—á–∏—Å–ª—è–µ—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π score –¥–ª—è —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞
 */
export function calculatePersonalizationScore(
  specialist: any,
  profile: PersonalProfile,
  category: CategoryKey
): PersonalizationScore {
  let genderCompatibility = 50 // –±–∞–∑–æ–≤—ã–π score
  let ageAppropriateness = 50
  let experienceLevel = 50
  let communicationStyle = 50
  let problemSpecificity = 50
  let culturalFit = 50

  // –ê–Ω–∞–ª–∏–∑ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ –ø–æ –ø–æ–ª—É
  if (profile.gender === 'male' && category === 'fitness') {
    genderCompatibility = 80 // –º—É–∂—á–∏–Ω—ã –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é—Ç –º—É–∂—á–∏–Ω-—Ç—Ä–µ–Ω–µ—Ä–æ–≤
  } else if (profile.gender === 'female' && category === 'psychology') {
    genderCompatibility = 75 // –∂–µ–Ω—â–∏–Ω—ã —á–∞—Å—Ç–æ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é—Ç –∂–µ–Ω—â–∏–Ω-–ø—Å–∏—Ö–æ–ª–æ–≥–æ–≤
  }

  // –ê–Ω–∞–ª–∏–∑ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç—É
  if (profile.age === 'young' && specialist.yearsOfPractice && specialist.yearsOfPractice < 10) {
    ageAppropriateness = 85 // –º–æ–ª–æ–¥—ã–º –ø–æ–¥—Ö–æ–¥—è—Ç –º–æ–ª–æ–¥—ã–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã
  } else if (profile.age === 'mature' && specialist.yearsOfPractice && specialist.yearsOfPractice > 10) {
    ageAppropriateness = 85 // –∑—Ä–µ–ª—ã–º –ø–æ–¥—Ö–æ–¥—è—Ç –æ–ø—ã—Ç–Ω—ã–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã
  }

  // –ê–Ω–∞–ª–∏–∑ –æ–ø—ã—Ç–∞
  if (profile.experience === 'none' && specialist.yearsOfPractice && specialist.yearsOfPractice > 5) {
    experienceLevel = 90 // –Ω–æ–≤–∏—á–∫–∞–º –Ω—É–∂–Ω—ã –æ–ø—ã—Ç–Ω—ã–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã
  } else if (profile.experience === 'regular' && specialist.yearsOfPractice && specialist.yearsOfPractice > 10) {
    experienceLevel = 85 // –æ–ø—ã—Ç–Ω—ã–º –Ω—É–∂–Ω—ã –æ—á–µ–Ω—å –æ–ø—ã—Ç–Ω—ã–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã
  }

  // –û–±—â–∏–π score
  const overall = Math.round((
    genderCompatibility + 
    ageAppropriateness + 
    experienceLevel + 
    communicationStyle + 
    problemSpecificity + 
    culturalFit
  ) / 6)

  return {
    genderCompatibility,
    ageAppropriateness,
    experienceLevel,
    communicationStyle,
    problemSpecificity,
    culturalFit,
    overall
  }
}

/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –≤—ã–±–æ—Ä–∞ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞
 */
export function generatePersonalizedExplanation(
  specialist: any,
  profile: PersonalProfile,
  category: CategoryKey
): string {
  const explanations: string[] = []
  
  // –û–±—ä—è—Å–Ω–µ–Ω–∏–µ –ø–æ –ø–æ–ª—É
  if (profile.gender === 'male' && category === 'fitness') {
    explanations.push('–°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –Ω–∞ —Ä–∞–±–æ—Ç–µ —Å –º—É–∂—á–∏–Ω–∞–º–∏')
  } else if (profile.gender === 'female' && category === 'psychology') {
    explanations.push('–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã —Å –∂–µ–Ω—â–∏–Ω–∞–º–∏ –≤–∞—à–µ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞')
  }
  
  // –û–±—ä—è—Å–Ω–µ–Ω–∏–µ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç—É
  if (profile.age === 'young' && specialist.yearsOfPractice && specialist.yearsOfPractice < 10) {
    explanations.push('–ú–æ–ª–æ–¥–æ–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç, –ø–æ–Ω–∏–º–∞–µ—Ç —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–æ–¥—Ö–æ–¥—ã')
  } else if (profile.age === 'mature' && specialist.yearsOfPractice && specialist.yearsOfPractice > 10) {
    explanations.push('–û–ø—ã—Ç–Ω—ã–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç —Å –º–Ω–æ–≥–æ–ª–µ—Ç–Ω–µ–π –ø—Ä–∞–∫—Ç–∏–∫–æ–π')
  }
  
  // –û–±—ä—è—Å–Ω–µ–Ω–∏–µ –ø–æ –æ–ø—ã—Ç—É
  if (profile.experience === 'none' && specialist.yearsOfPractice && specialist.yearsOfPractice > 5) {
    explanations.push('–¢–µ—Ä–ø–µ–ª–∏–≤—ã–π –ø–æ–¥—Ö–æ–¥ –∫ –Ω–æ–≤–∏—á–∫–∞–º')
  }
  
  return explanations.join(', ')
}
