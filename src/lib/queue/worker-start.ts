/**
 * Entry point –¥–ª—è –∑–∞–ø—É—Å–∫–∞ preview worker
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å: npx ts-node src/lib/queue/worker-start.ts
 * –î–ª—è production: –¥–æ–±–∞–≤–∏—Ç—å –≤ package.json scripts
 */

import { createPreviewWorker } from './preview-worker'

console.log('üöÄ –ó–∞–ø—É—Å–∫ Preview Worker...')

const worker = createPreviewWorker()

if (!worker) {
  console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å worker - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Redis')
  process.exit(1)
}

// Graceful shutdown
process.on('SIGTERM', async () => {
  console.log('–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGTERM, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º worker...')
  await worker.close()
  process.exit(0)
})

process.on('SIGINT', async () => {
  console.log('–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª SIGINT, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º worker...')
  await worker.close()
  process.exit(0)
})

console.log('‚úÖ Preview Worker —Ä–∞–±–æ—Ç–∞–µ—Ç')
console.log('–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C')

