/**
 * –ö–æ–¥—ã —Å—Ç—Ä–∞–Ω –∏ –∏—Ö —Ñ–æ—Ä–º–∞—Ç—ã –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤
 */

export interface CountryCode {
  code: string // –ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–π –∫–æ–¥ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "7", "380", "1")
  name: string // –ù–∞–∑–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã
  flag: string // –≠–º–æ–¥–∑–∏ —Ñ–ª–∞–≥–∞
  format: string // –§–æ—Ä–º–∞—Ç –º–∞—Å–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "+7 (###) ###-##-##")
  placeholder: string // –ü–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä
  length: number // –û–±—â–∞—è –¥–ª–∏–Ω–∞ –Ω–æ–º–µ—Ä–∞ –≤–∫–ª—é—á–∞—è –∫–æ–¥ —Å—Ç—Ä–∞–Ω—ã
  nationalFormat?: string // –ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
}

export const COUNTRY_CODES: Record<string, CountryCode> = {
  // –†–æ—Å—Å–∏—è –∏ —Å—Ç—Ä–∞–Ω—ã –°–ù–ì
  '7': {
    code: '7',
    name: '–†–æ—Å—Å–∏—è',
    flag: 'üá∑üá∫',
    format: '+7 (###) ###-##-##',
    placeholder: '+7 (999) 123-45-67',
    length: 11,
    nationalFormat: '+7 (###) ###-##-##'
  },
  
  // –£–∫—Ä–∞–∏–Ω–∞
  '380': {
    code: '380',
    name: '–£–∫—Ä–∞–∏–Ω–∞',
    flag: 'üá∫üá¶',
    format: '+380 (##) ###-##-##',
    placeholder: '+380 (99) 123-45-67',
    length: 12,
    nationalFormat: '+380 (##) ###-##-##'
  },
  
  // –ë–µ–ª–∞—Ä—É—Å—å
  '375': {
    code: '375',
    name: '–ë–µ–ª–∞—Ä—É—Å—å',
    flag: 'üáßüáæ',
    format: '+375 (##) ###-##-##',
    placeholder: '+375 (29) 123-45-67',
    length: 12,
    nationalFormat: '+375 (##) ###-##-##'
  },
  
  // –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç–æ—Ç –∂–µ –∫–æ–¥ 7, —á—Ç–æ –∏ –†–æ—Å—Å–∏—è)
  // –î–ª—è —Ä–∞–∑–ª–∏—á–µ–Ω–∏—è –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–∏–∞–ø–∞–∑–æ–Ω—ã –Ω–æ–º–µ—Ä–æ–≤
  // '7-kz': { 
  //   code: '7',
  //   name: '–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω',
  //   flag: 'üá∞üáø',
  //   format: '+7 (###) ###-##-##',
  //   placeholder: '+7 (700) 123-45-67',
  //   length: 11,
  //   nationalFormat: '+7 (###) ###-##-##'
  // },
  
  // –°–®–ê –∏ –ö–∞–Ω–∞–¥–∞
  '1': {
    code: '1',
    name: '–°–®–ê/–ö–∞–Ω–∞–¥–∞',
    flag: 'üá∫üá∏',
    format: '+1 (###) ###-####',
    placeholder: '+1 (555) 123-4567',
    length: 11,
    nationalFormat: '+1 (###) ###-####'
  },
  
  // –ì–µ—Ä–º–∞–Ω–∏—è
  '49': {
    code: '49',
    name: '–ì–µ—Ä–º–∞–Ω–∏—è',
    flag: 'üá©üá™',
    format: '+49 ### ########',
    placeholder: '+49 30 12345678',
    length: 12,
    nationalFormat: '+49 ### ########'
  },
  
  // –§—Ä–∞–Ω—Ü–∏—è
  '33': {
    code: '33',
    name: '–§—Ä–∞–Ω—Ü–∏—è',
    flag: 'üá´üá∑',
    format: '+33 # ## ## ## ##',
    placeholder: '+33 1 23 45 67 89',
    length: 11,
    nationalFormat: '+33 # ## ## ## ##'
  },
  
  // –í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏—è
  '44': {
    code: '44',
    name: '–í–µ–ª–∏–∫–æ–±—Ä–∏—Ç–∞–Ω–∏—è',
    flag: 'üá¨üáß',
    format: '+44 #### ######',
    placeholder: '+44 20 1234 5678',
    length: 12,
    nationalFormat: '+44 #### ######'
  },
  
  // –ö–∏—Ç–∞–π
  '86': {
    code: '86',
    name: '–ö–∏—Ç–∞–π',
    flag: 'üá®üá≥',
    format: '+86 ### #### ####',
    placeholder: '+86 138 1234 5678',
    length: 13,
    nationalFormat: '+86 ### #### ####'
  },
  
  // –Ø–ø–æ–Ω–∏—è
  '81': {
    code: '81',
    name: '–Ø–ø–æ–Ω–∏—è',
    flag: 'üáØüáµ',
    format: '+81 ##-####-####',
    placeholder: '+81 90-1234-5678',
    length: 12,
    nationalFormat: '+81 ##-####-####'
  },
  
  // –Æ–∂–Ω–∞—è –ö–æ—Ä–µ—è
  '82': {
    code: '82',
    name: '–Æ–∂–Ω–∞—è –ö–æ—Ä–µ—è',
    flag: 'üá∞üá∑',
    format: '+82 ##-####-####',
    placeholder: '+82 10-1234-5678',
    length: 12,
    nationalFormat: '+82 ##-####-####'
  },
  
  // –ò–Ω–¥–∏—è
  '91': {
    code: '91',
    name: '–ò–Ω–¥–∏—è',
    flag: 'üáÆüá≥',
    format: '+91 ##### #####',
    placeholder: '+91 98765 43210',
    length: 12,
    nationalFormat: '+91 ##### #####'
  },
  
  // –¢—É—Ä—Ü–∏—è
  '90': {
    code: '90',
    name: '–¢—É—Ä—Ü–∏—è',
    flag: 'üáπüá∑',
    format: '+90 ### ### ## ##',
    placeholder: '+90 555 123 45 67',
    length: 12,
    nationalFormat: '+90 ### ### ## ##'
  },
  
  // –ë—Ä–∞–∑–∏–ª–∏—è
  '55': {
    code: '55',
    name: '–ë—Ä–∞–∑–∏–ª–∏—è',
    flag: 'üáßüá∑',
    format: '+55 ## #####-####',
    placeholder: '+55 11 99999-9999',
    length: 13,
    nationalFormat: '+55 ## #####-####'
  },
  
  // –ê–≤—Å—Ç—Ä–∞–ª–∏—è
  '61': {
    code: '61',
    name: '–ê–≤—Å—Ç—Ä–∞–ª–∏—è',
    flag: 'üá¶üá∫',
    format: '+61 ### ### ###',
    placeholder: '+61 412 345 678',
    length: 11,
    nationalFormat: '+61 ### ### ###'
  },
  
  // –ò—Å–ø–∞–Ω–∏—è
  '34': {
    code: '34',
    name: '–ò—Å–ø–∞–Ω–∏—è',
    flag: 'üá™üá∏',
    format: '+34 ### ## ## ##',
    placeholder: '+34 612 34 56 78',
    length: 11,
    nationalFormat: '+34 ### ## ## ##'
  },
  
  // –ò—Ç–∞–ª–∏—è
  '39': {
    code: '39',
    name: '–ò—Ç–∞–ª–∏—è',
    flag: 'üáÆüáπ',
    format: '+39 ### ### ####',
    placeholder: '+39 312 345 6789',
    length: 12,
    nationalFormat: '+39 ### ### ####'
  },
  
  // –ü–æ–ª—å—à–∞
  '48': {
    code: '48',
    name: '–ü–æ–ª—å—à–∞',
    flag: 'üáµüá±',
    format: '+48 ### ### ###',
    placeholder: '+48 123 456 789',
    length: 11,
    nationalFormat: '+48 ### ### ###'
  },
  
  // –ù–∏–¥–µ—Ä–ª–∞–Ω–¥—ã
  '31': {
    code: '31',
    name: '–ù–∏–¥–µ—Ä–ª–∞–Ω–¥—ã',
    flag: 'üá≥üá±',
    format: '+31 ## ### ####',
    placeholder: '+31 6 12345678',
    length: 11,
    nationalFormat: '+31 ## ### ####'
  },
  
  // –®–≤–µ—Ü–∏—è
  '46': {
    code: '46',
    name: '–®–≤–µ—Ü–∏—è',
    flag: 'üá∏üá™',
    format: '+46 ## ### ## ##',
    placeholder: '+46 70 123 45 67',
    length: 11,
    nationalFormat: '+46 ## ### ## ##'
  },
  
  // –ù–æ—Ä–≤–µ–≥–∏—è
  '47': {
    code: '47',
    name: '–ù–æ—Ä–≤–µ–≥–∏—è',
    flag: 'üá≥üá¥',
    format: '+47 ### ## ###',
    placeholder: '+47 123 45 678',
    length: 10,
    nationalFormat: '+47 ### ## ###'
  },
  
  // –î–∞–Ω–∏—è
  '45': {
    code: '45',
    name: '–î–∞–Ω–∏—è',
    flag: 'üá©üá∞',
    format: '+45 ## ## ## ##',
    placeholder: '+45 12 34 56 78',
    length: 10,
    nationalFormat: '+45 ## ## ## ##'
  },
  
  // –§–∏–Ω–ª—è–Ω–¥–∏—è
  '358': {
    code: '358',
    name: '–§–∏–Ω–ª—è–Ω–¥–∏—è',
    flag: 'üá´üáÆ',
    format: '+358 ## ### ####',
    placeholder: '+358 50 123 4567',
    length: 11,
    nationalFormat: '+358 ## ### ####'
  },
  
  // –®–≤–µ–π—Ü–∞—Ä–∏—è
  '41': {
    code: '41',
    name: '–®–≤–µ–π—Ü–∞—Ä–∏—è',
    flag: 'üá®üá≠',
    format: '+41 ## ### ## ##',
    placeholder: '+41 79 123 45 67',
    length: 11,
    nationalFormat: '+41 ## ### ## ##'
  },
  
  // –ê–≤—Å—Ç—Ä–∏—è
  '43': {
    code: '43',
    name: '–ê–≤—Å—Ç—Ä–∏—è',
    flag: 'üá¶üáπ',
    format: '+43 ### ### ####',
    placeholder: '+43 664 123 4567',
    length: 12,
    nationalFormat: '+43 ### ### ####'
  },
  
  // –ß–µ—Ö–∏—è
  '420': {
    code: '420',
    name: '–ß–µ—Ö–∏—è',
    flag: 'üá®üáø',
    format: '+420 ### ### ###',
    placeholder: '+420 123 456 789',
    length: 11,
    nationalFormat: '+420 ### ### ###'
  },
  
  // –í–µ–Ω–≥—Ä–∏—è
  '36': {
    code: '36',
    name: '–í–µ–Ω–≥—Ä–∏—è',
    flag: 'üá≠üá∫',
    format: '+36 ## ### ####',
    placeholder: '+36 20 123 4567',
    length: 11,
    nationalFormat: '+36 ## ### ####'
  },
  
  // –†—É–º—ã–Ω–∏—è
  '40': {
    code: '40',
    name: '–†—É–º—ã–Ω–∏—è',
    flag: 'üá∑üá¥',
    format: '+40 ### ### ###',
    placeholder: '+40 123 456 789',
    length: 11,
    nationalFormat: '+40 ### ### ###'
  },
  
  // –ë–æ–ª–≥–∞—Ä–∏—è
  '359': {
    code: '359',
    name: '–ë–æ–ª–≥–∞—Ä–∏—è',
    flag: 'üáßüá¨',
    format: '+359 ## ### ####',
    placeholder: '+359 87 123 4567',
    length: 11,
    nationalFormat: '+359 ## ### ####'
  },
  
  // –ì—Ä–µ—Ü–∏—è
  '30': {
    code: '30',
    name: '–ì—Ä–µ—Ü–∏—è',
    flag: 'üá¨üá∑',
    format: '+30 ### ### ####',
    placeholder: '+30 694 123 4567',
    length: 12,
    nationalFormat: '+30 ### ### ####'
  },
  
  // –ü–æ—Ä—Ç—É–≥–∞–ª–∏—è
  '351': {
    code: '351',
    name: '–ü–æ—Ä—Ç—É–≥–∞–ª–∏—è',
    flag: 'üáµüáπ',
    format: '+351 ### ### ###',
    placeholder: '+351 123 456 789',
    length: 11,
    nationalFormat: '+351 ### ### ###'
  },
  
  // –ò–∑—Ä–∞–∏–ª—å
  '972': {
    code: '972',
    name: '–ò–∑—Ä–∞–∏–ª—å',
    flag: 'üáÆüá±',
    format: '+972 ##-###-####',
    placeholder: '+972 50-123-4567',
    length: 11,
    nationalFormat: '+972 ##-###-####'
  },
  
  // –û–ê–≠
  '971': {
    code: '971',
    name: '–û–ê–≠',
    flag: 'üá¶üá™',
    format: '+971 ## ### ####',
    placeholder: '+971 50 123 4567',
    length: 11,
    nationalFormat: '+971 ## ### ####'
  },
  
  // –°–∞—É–¥–æ–≤—Å–∫–∞—è –ê—Ä–∞–≤–∏—è
  '966': {
    code: '966',
    name: '–°–∞—É–¥–æ–≤—Å–∫–∞—è –ê—Ä–∞–≤–∏—è',
    flag: 'üá∏üá¶',
    format: '+966 ## ### ####',
    placeholder: '+966 50 123 4567',
    length: 11,
    nationalFormat: '+966 ## ### ####'
  },
  
  // –ï–≥–∏–ø–µ—Ç
  '20': {
    code: '20',
    name: '–ï–≥–∏–ø–µ—Ç',
    flag: 'üá™üá¨',
    format: '+20 ## #### ####',
    placeholder: '+20 10 1234 5678',
    length: 12,
    nationalFormat: '+20 ## #### ####'
  },
  
  // –Æ–ê–†
  '27': {
    code: '27',
    name: '–Æ–ê–†',
    flag: 'üáøüá¶',
    format: '+27 ## ### ####',
    placeholder: '+27 82 123 4567',
    length: 11,
    nationalFormat: '+27 ## ### ####'
  },
  
  // –ê—Ä–≥–µ–Ω—Ç–∏–Ω–∞
  '54': {
    code: '54',
    name: '–ê—Ä–≥–µ–Ω—Ç–∏–Ω–∞',
    flag: 'üá¶üá∑',
    format: '+54 ## ####-####',
    placeholder: '+54 11 1234-5678',
    length: 12,
    nationalFormat: '+54 ## ####-####'
  },
  
  // –ú–µ–∫—Å–∏–∫–∞
  '52': {
    code: '52',
    name: '–ú–µ–∫—Å–∏–∫–∞',
    flag: 'üá≤üáΩ',
    format: '+52 ## #### ####',
    placeholder: '+52 55 1234 5678',
    length: 12,
    nationalFormat: '+52 ## #### ####'
  },
  
  // –ß–∏–ª–∏
  '56': {
    code: '56',
    name: '–ß–∏–ª–∏',
    flag: 'üá®üá±',
    format: '+56 # #### ####',
    placeholder: '+56 9 1234 5678',
    length: 11,
    nationalFormat: '+56 # #### ####'
  },
  
  // –ö–æ–ª—É–º–±–∏—è
  '57': {
    code: '57',
    name: '–ö–æ–ª—É–º–±–∏—è',
    flag: 'üá®üá¥',
    format: '+57 ### ### ####',
    placeholder: '+57 300 123 4567',
    length: 12,
    nationalFormat: '+57 ### ### ####'
  },
  
  // –ü–µ—Ä—É
  '51': {
    code: '51',
    name: '–ü–µ—Ä—É',
    flag: 'üáµüá™',
    format: '+51 ### ### ###',
    placeholder: '+51 999 123 456',
    length: 11,
    nationalFormat: '+51 ### ### ###'
  },
  
  // –¢–∞–∏–ª–∞–Ω–¥
  '66': {
    code: '66',
    name: '–¢–∞–∏–ª–∞–Ω–¥',
    flag: 'üáπüá≠',
    format: '+66 ##-###-####',
    placeholder: '+66 81-234-5678',
    length: 11,
    nationalFormat: '+66 ##-###-####'
  },
  
  // –°–∏–Ω–≥–∞–ø—É—Ä
  '65': {
    code: '65',
    name: '–°–∏–Ω–≥–∞–ø—É—Ä',
    flag: 'üá∏üá¨',
    format: '+65 #### ####',
    placeholder: '+65 8123 4567',
    length: 10,
    nationalFormat: '+65 #### ####'
  },
  
  // –ú–∞–ª–∞–π–∑–∏—è
  '60': {
    code: '60',
    name: '–ú–∞–ª–∞–π–∑–∏—è',
    flag: 'üá≤üáæ',
    format: '+60 ##-### ####',
    placeholder: '+60 12-345 6789',
    length: 11,
    nationalFormat: '+60 ##-### ####'
  },
  
  // –ò–Ω–¥–æ–Ω–µ–∑–∏—è
  '62': {
    code: '62',
    name: '–ò–Ω–¥–æ–Ω–µ–∑–∏—è',
    flag: 'üáÆüá©',
    format: '+62 ###-###-####',
    placeholder: '+62 812-345-6789',
    length: 12,
    nationalFormat: '+62 ###-###-####'
  },
  
  // –í—å–µ—Ç–Ω–∞–º
  '84': {
    code: '84',
    name: '–í—å–µ—Ç–Ω–∞–º',
    flag: 'üáªüá≥',
    format: '+84 ## ### ## ##',
    placeholder: '+84 90 123 45 67',
    length: 11,
    nationalFormat: '+84 ## ### ## ##'
  },
  
  // –§–∏–ª–∏–ø–ø–∏–Ω—ã
  '63': {
    code: '63',
    name: '–§–∏–ª–∏–ø–ø–∏–Ω—ã',
    flag: 'üáµüá≠',
    format: '+63 ### ### ####',
    placeholder: '+63 917 123 4567',
    length: 12,
    nationalFormat: '+63 ### ### ####'
  }
}

/**
 * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∫–æ–¥ —Å—Ç—Ä–∞–Ω—ã –ø–æ –≤–≤–µ–¥—ë–Ω–Ω—ã–º —Ü–∏—Ñ—Ä–∞–º
 */
export function detectCountryCode(input: string): CountryCode | null {
  const digits = input.replace(/\D/g, '')
  
  if (!digits) return null
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–¥—ã —Ä–∞–∑–Ω–æ–π –¥–ª–∏–Ω—ã (–æ—Ç –¥–ª–∏–Ω–Ω—ã—Ö –∫ –∫–æ—Ä–æ—Ç–∫–∏–º)
  const possibleCodes = Object.keys(COUNTRY_CODES).sort((a, b) => b.length - a.length)
  
  for (const code of possibleCodes) {
    if (digits.startsWith(code)) {
      return COUNTRY_CODES[code]
    }
  }
  
  // –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º null
  return null
}

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —Å–æ–≥–ª–∞—Å–Ω–æ –º–∞—Å–∫–µ —Å—Ç—Ä–∞–Ω—ã
 * –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –ª–æ–≥–∏–∫–∞: –∫–æ–¥ —Å—Ç—Ä–∞–Ω—ã –Ω–µ –¥—É–±–ª–∏—Ä—É–µ—Ç—Å—è –≤ –Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π —á–∞—Å—Ç–∏
 */
export function formatPhoneNumber(input: string, countryCode?: CountryCode): string {
  const digits = input.replace(/\D/g, '')
  if (!digits) return ''
  
  const country = countryCode || detectCountryCode(digits)
  if (!country) return '+' + digits
  
  // –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–æ–¥ —Å—Ç—Ä–∞–Ω—ã –∏ –Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ü–∏—Ñ—Ä—ã
  const codeLength = country.code.length
  let nationalDigits = ''
  
  if (digits.startsWith(country.code)) {
    // –ï—Å–ª–∏ –Ω–æ–º–µ—Ä –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –∫–æ–¥–∞ —Å—Ç—Ä–∞–Ω—ã - –∏–∑–≤–ª–µ–∫–∞–µ–º —Ç–æ–ª—å–∫–æ –Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ü–∏—Ñ—Ä—ã
    nationalDigits = digits.substring(codeLength)
  } else {
    // –ï—Å–ª–∏ –∫–æ–¥ —Å—Ç—Ä–∞–Ω—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç - –≤—Å–µ —Ü–∏—Ñ—Ä—ã —Å—á–∏—Ç–∞–µ–º –Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º–∏
    nationalDigits = digits
  }
  
  // –ù–∞—á–∏–Ω–∞–µ–º —Å –ø—Ä–µ—Ñ–∏–∫—Å–∞ –∫–æ–¥–∞ —Å—Ç—Ä–∞–Ω—ã
  let result = `+${country.code}`
  
  // –ï—Å–ª–∏ –Ω–µ—Ç –Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö —Ü–∏—Ñ—Ä - –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ –∫–æ–¥ —Å –ø—Ä–æ–±–µ–ª–æ–º
  if (!nationalDigits) {
    return result + ' '
  }
  
  // –ü–∞—Ä—Å–∏–º —Ñ–æ—Ä–º–∞—Ç —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –≥–¥–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è —á–∞—Å—Ç—å
  const format = country.format
  
  // –ù–∞—Ö–æ–¥–∏–º –ø–æ–∑–∏—Ü–∏—é –≥–¥–µ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –∫–æ–¥ —Å—Ç—Ä–∞–Ω—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ
  // –ò—â–µ–º —Å—Ç—Ä–æ–∫—É "+–∫–æ–¥_—Å—Ç—Ä–∞–Ω—ã" –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ "–∫–æ–¥_—Å—Ç—Ä–∞–Ω—ã"
  const codePrefix = `+${country.code}`
  let formatStartIndex = format.indexOf(codePrefix)
  
  if (formatStartIndex === -1) {
    // –ü—Ä–µ—Ñ–∏–∫—Å –Ω–µ –Ω–∞–π–¥–µ–Ω, –Ω–∞—á–∏–Ω–∞–µ–º —Å –Ω–∞—á–∞–ª–∞
    formatStartIndex = 0
  } else {
    // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–æ–¥ —Å—Ç—Ä–∞–Ω—ã –∏ –æ–¥–∏–Ω –ø—Ä–æ–±–µ–ª –ø–æ—Å–ª–µ –Ω–µ–≥–æ (–µ—Å–ª–∏ –µ—Å—Ç—å)
    formatStartIndex += codePrefix.length
    if (formatStartIndex < format.length && format[formatStartIndex] === ' ') {
      formatStartIndex++
    }
  }
  
  // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–±–µ–ª –ø–æ—Å–ª–µ –∫–æ–¥–∞ —Å—Ç—Ä–∞–Ω—ã
  result += ' '
  
  // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ü–∏—Ñ—Ä—ã –Ω–∞—á–∏–Ω–∞—è —Å –ø–æ–∑–∏—Ü–∏–∏ –ø–æ—Å–ª–µ –∫–æ–¥–∞
  let formatIndex = formatStartIndex
  let nationalDigitIndex = 0
  
  while (formatIndex < format.length && nationalDigitIndex < nationalDigits.length) {
    const char = format[formatIndex]
    
    if (char === '#') {
      // –î–æ–±–∞–≤–ª—è–µ–º —Ü–∏—Ñ—Ä—É
      result += nationalDigits[nationalDigitIndex]
      nationalDigitIndex++
    } else {
      // –≠—Ç–æ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å (—Å–∫–æ–±–∫–∞, –ø—Ä–æ–±–µ–ª, –¥–µ—Ñ–∏—Å –∏ —Ç.–¥.)
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º: –±—É–¥–µ—Ç –ª–∏ —Å–ª–µ–¥—É—é—â–∞—è —Ü–∏—Ñ—Ä–∞ –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è?
      let willHaveDigitAfter = false
      for (let i = formatIndex + 1; i < format.length; i++) {
        if (format[i] === '#') {
          // –ù–∞—à–ª–∏ # –≤–ø–µ—Ä–µ–¥–∏ - –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —É –Ω–∞—Å —Ü–∏—Ñ—Ä–∞ –¥–ª—è –Ω–µ–≥–æ
          willHaveDigitAfter = nationalDigitIndex < nationalDigits.length
          break
        }
      }
      
      // –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–æ—Å–ª–µ –Ω–µ–≥–æ –±—É–¥–µ—Ç —Ü–∏—Ñ—Ä–∞
      if (willHaveDigitAfter) {
        result += char
      }
    }
    
    formatIndex++
  }
  
  return result
}

/**
 * –ù–æ—Ä–º–∞–ª–∏–∑—É–µ—Ç –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
 */
export function normalizePhoneNumber(input: string): string {
  const digits = input.replace(/\D/g, '')
  if (!digits) return ''
  
  const country = detectCountryCode(digits)
  if (!country) return digits
  
  // –ï—Å–ª–∏ –Ω–æ–º–µ—Ä –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 8 –∏ —ç—Ç–æ –†–æ—Å—Å–∏—è, –∑–∞–º–µ–Ω—è–µ–º –Ω–∞ 7
  if (country.code === '7' && digits.startsWith('8')) {
    return '+' + '7' + digits.slice(1)
  }
  
  // –ï—Å–ª–∏ –Ω–æ–º–µ—Ä —É–∂–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–æ–¥ —Å—Ç—Ä–∞–Ω—ã, –¥–æ–±–∞–≤–ª—è–µ–º +
  if (digits.startsWith(country.code)) {
    return '+' + digits
  }
  
  // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ù–ï –¥–æ–±–∞–≤–ª—è–µ–º –∫–æ–¥ —Å—Ç—Ä–∞–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
  // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω —Å–∞–º –≤–≤–µ—Å—Ç–∏ –∫–æ–¥ —Å—Ç—Ä–∞–Ω—ã
  return digits
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä –¥–ª—è –∫–æ–¥–∞ —Å—Ç—Ä–∞–Ω—ã
 */
export function getPlaceholder(countryCode?: CountryCode): string {
  return countryCode?.placeholder || COUNTRY_CODES['7'].placeholder
}

/**
 * –í–∞–ª–∏–¥–∏—Ä—É–µ—Ç –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
 */
export function validatePhoneNumber(input: string): { isValid: boolean; error?: string } {
  const digits = input.replace(/\D/g, '')
  
  if (!digits) {
    return { isValid: false, error: '–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω' }
  }
  
  const country = detectCountryCode(digits)
  if (!country) {
    return { isValid: false, error: '–ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥ —Å—Ç—Ä–∞–Ω—ã' }
  }
  
  if (digits.length < country.length - 1) {
    return { isValid: false, error: `–ù–æ–º–µ—Ä —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π –¥–ª—è ${country.name}` }
  }
  
  if (digits.length > country.length) {
    return { isValid: false, error: `–ù–æ–º–µ—Ä —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π –¥–ª—è ${country.name}` }
  }
  
  return { isValid: true }
}
