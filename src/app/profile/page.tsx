/**
 * –£–ù–ò–§–ò–¶–ò–†–û–í–ê–ù–ù–´–ô –õ–ò–ß–ù–´–ô –ö–ê–ë–ò–ù–ï–¢
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –±–∞–∑–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
 * + –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞, –µ—Å–ª–∏ hasSpecialistProfile === true
 */

import { redirect } from 'next/navigation'
import { cookies } from 'next/headers'
import { prisma } from '@/lib/db'
import { Button } from '@/components/ui/button'
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'
import { Badge } from '@/components/ui/badge'
import { User, Phone, Mail, Stethoscope } from 'lucide-react'
import Link from 'next/link'
import { DashboardStats } from '@/components/specialist/dashboard/DashboardStats'
import { ProfileCompletionCard } from '@/components/specialist/dashboard/ProfileCompletionCard'
import { QuickActions } from '@/components/specialist/dashboard/QuickActions'
import { ServicesList } from '@/components/specialist/dashboard/ServicesList'
import { LogoutButton } from '@/components/profile/LogoutButton'
import { BalanceWidgetWrapper } from '@/components/points/BalanceWidgetWrapper'
import { ensureSlugExists } from '@/lib/auth/server'

async function getUserData() {
  try {
    const cookieStore = await cookies()
    const sessionToken = cookieStore.get('session_token')?.value

    if (!sessionToken) {
      return null
    }

    const authSession = await prisma.authSession.findFirst({
      where: {
        sessionToken,
        expiresAt: { gt: new Date() },
        isActive: true
      },
      include: {
        user: {
          include: {
            specialistProfile: {
              include: {
                education: true,
                certificates: true,
                gallery: true,
                faqs: true,
                leadMagnets: {
                  where: { isActive: true }
                },
                services: {
                  where: { isActive: true },
                  orderBy: { order: 'asc' }
                },
                orders: {
                  orderBy: { createdAt: 'desc' },
                  take: 5
                }
              }
            }
          }
        }
      }
    })

    if (!authSession) {
      return null
    }

    const user = authSession.user
    const hasSpecialistProfile = !!user.specialistProfile

    // –ë–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const userData: any = {
      id: user.id,
      firstName: user.firstName,
      lastName: user.lastName,
      phone: user.phone,
      email: user.email,
      avatar: user.avatar,
      hasSpecialistProfile,
      createdAt: user.createdAt
    }

    // –ï—Å–ª–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç - –¥–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞
    if (hasSpecialistProfile && user.specialistProfile) {
      const profile = user.specialistProfile

      // üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –ü—Ä–æ–≤–µ—Ä—è–µ–º slug
      console.log('[Profile Page] –ü—Ä–æ–≤–µ—Ä–∫–∞ slug –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', user.id)
      console.log('[Profile Page] –¢–µ–∫—É—â–∏–π slug:', profile.slug)
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º slug –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
      if (!profile.slug || profile.slug.trim().length === 0) {
        console.warn('[Profile Page] ‚ö†Ô∏è Slug –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç! –í—ã–∑—ã–≤–∞–µ–º ensureSlugExists...')
        const fixedSlug = await ensureSlugExists(user.id)
        if (fixedSlug) {
          profile.slug = fixedSlug
          console.log('[Profile Page] ‚úÖ Slug –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:', fixedSlug)
        } else {
          console.error('[Profile Page] ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å slug')
        }
      }

      // –ü–æ–¥—Å—á—ë—Ç –ø—Ä–æ—Ü–µ–Ω—Ç–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è
      const completionFields = {
        firstName: user.firstName ? 1 : 0,
        lastName: user.lastName ? 1 : 0,
        about: profile.about ? 1 : 0,
        specializations: profile.specializations.length > 0 ? 1 : 0,
        avatar: user.avatar ? 15 : 0,
        tagline: profile.tagline ? 5 : 0,
        city: profile.city ? 5 : 0,
        email: user.email ? 5 : 0,
        prices: (profile.priceFrom || profile.priceTo) ? 10 : 0,
        yearsOfPractice: profile.yearsOfPractice ? 5 : 0,
        education: profile.education.length > 0 ? 15 : 0,
        certificates: profile.certificates.length > 0 ? 20 : 0,
        gallery: profile.gallery.length > 0 ? 10 : 0,
        faqs: profile.faqs.length > 0 ? 5 : 0,
        video: profile.videoUrl ? 10 : 0,
        leadMagnets: profile.leadMagnets.length > 0 ? 10 : 0,
      }

      const baseCompletion = 20
      const additionalCompletion = Object.values(completionFields).reduce((sum, val) => sum + val, 0) - 4
      const completionPercentage = Math.min(100, baseCompletion + additionalCompletion)

      // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞—è–≤–æ–∫ –∑–∞ –Ω–µ–¥–µ–ª—é
      const consultationRequestsCount = await prisma.consultationRequest.count({
        where: {
          specialistProfileId: profile.id,
          createdAt: {
            gte: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000)
          }
        }
      })

      // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ–≤—ã—Ö (–Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö) –∑–∞—è–≤–æ–∫
      const newRequestsCount = await prisma.consultationRequest.count({
        where: {
          specialistProfileId: profile.id,
          status: 'new'
        }
      })

      // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤ –∑–∞ –Ω–µ–¥–µ–ª—é
      const ordersCount = await prisma.order.count({
        where: {
          specialistProfileId: profile.id,
          createdAt: {
            gte: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000)
          }
        }
      })

      // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–æ–≤—ã—Ö –∑–∞–∫–∞–∑–æ–≤ (pending + paid)
      const newOrdersCount = await prisma.order.count({
        where: {
          specialistProfileId: profile.id,
          status: {
            in: ['pending', 'paid']
          }
        }
      })

      // –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–¥–∞–Ω–∏—è
      const tasks = []
      
      if (!user.avatar) {
        tasks.push({
          id: 'avatar',
          title: '–î–æ–±–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è',
          description: '–ü—Ä–æ—Ñ–∏–ª—å —Å —Ñ–æ—Ç–æ –≤—ã–∑—ã–≤–∞–µ—Ç –±–æ–ª—å—à–µ –¥–æ–≤–µ—Ä–∏—è',
          bonus: 15,
          completed: false
        })
      }
      
      if (profile.certificates.length === 0) {
        tasks.push({
          id: 'certificates',
          title: '–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã',
          description: '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —Å–≤–æ—é –∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—é',
          bonus: 20,
          completed: false
        })
      }
      
      if (profile.education.length === 0) {
        tasks.push({
          id: 'education',
          title: '–î–æ–±–∞–≤—å—Ç–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ',
          description: '–£–∫–∞–∂–∏—Ç–µ –≤–∞—à–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ',
          bonus: 15,
          completed: false
        })
      }
      
      if (profile.gallery.length === 0) {
        tasks.push({
          id: 'gallery',
          title: '–°–æ–∑–¥–∞–π—Ç–µ –≥–∞–ª–µ—Ä–µ—é',
          description: '–î–æ–±–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –≤–∞—à–µ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞ –∏–ª–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Ä–∞–±–æ—Ç—ã',
          bonus: 10,
          completed: false
        })
      }
      
      if (!profile.priceFrom && !profile.priceTo) {
        tasks.push({
          id: 'pricing',
          title: '–£–∫–∞–∂–∏—Ç–µ —Ü–µ–Ω—ã',
          description: '–ö–ª–∏–µ–Ω—Ç–∞–º –≤–∞–∂–Ω–æ –∑–Ω–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞—Ä–∞–Ω–µ–µ',
          bonus: 10,
          completed: false
        })
      }

      if (!profile.videoUrl) {
        tasks.push({
          id: 'video',
          title: '–î–æ–±–∞–≤—å—Ç–µ –≤–∏–¥–µ–æ-–ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é',
          description: '–í–∏–¥–µ–æ –ø–æ–º–æ–≥–∞–µ—Ç –∫–ª–∏–µ–Ω—Ç–∞–º –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –≤–∞–º–∏',
          bonus: 10,
          completed: false
        })
      }

      if (profile.leadMagnets.length === 0) {
        tasks.push({
          id: 'leadMagnets',
          title: '–°–æ–∑–¥–∞–π—Ç–µ –ª–∏–¥-–º–∞–≥–Ω–∏—Ç—ã',
          description: '–ü—Ä–∏–≤–ª–µ–∫–∞–π—Ç–µ –∫–ª–∏–µ–Ω—Ç–æ–≤ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–º–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏',
          bonus: 10,
          completed: false
        })
      }

      // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞
      userData.specialistProfile = {
        id: profile.id,
        slug: profile.slug,
        category: profile.category,
        specializations: profile.specializations,
        verified: profile.verified,
        acceptingClients: profile.acceptingClients,
        about: profile.about,
        tagline: profile.tagline,
        city: profile.city,
        priceFrom: profile.priceFrom,
        priceTo: profile.priceTo,
        yearsOfPractice: profile.yearsOfPractice,
        videoUrl: profile.videoUrl,
        profileViews: profile.profileViews,
        contactViews: profile.contactViews,
      }

      userData.stats = {
        profileViews: profile.profileViews,
        contactViews: profile.contactViews,
        consultationRequests: consultationRequestsCount,
        orders: ordersCount,
        completionPercentage,
      }

      userData.tasks = tasks
      userData.newRequestsCount = newRequestsCount
      userData.newOrdersCount = newOrdersCount
      userData.services = profile.services
      userData.recentOrders = profile.orders
    }

    return userData
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error)
    return null
  }
}

export default async function ProfilePage() {
  const user = await getUserData()

  // –ï—Å–ª–∏ –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω ‚Üí –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞
  if (!user) {
    redirect('/auth/login')
  }

  const fullName = `${user.firstName} ${user.lastName}`

  return (
    <div className="min-h-screen bg-gray-50">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="bg-white border-b border-gray-200">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
          <div className="flex items-center justify-between">
            <div>
              <h1 className="text-2xl md:text-3xl font-bold text-gray-900 mb-2">
                üëã –ü—Ä–∏–≤–µ—Ç, {user.firstName}!
              </h1>
              <p className="text-sm md:text-base text-gray-600">
                {user.hasSpecialistProfile 
                  ? '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≤–∞—à –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞'
                  : '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≤–∞—à –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç'
                }
              </p>
            </div>
            <div className="flex items-center space-x-3">
              {user.hasSpecialistProfile ? (
                <Badge variant="secondary" className="flex items-center space-x-1">
                  <Stethoscope className="h-3 w-3" />
                  <span>–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç</span>
                </Badge>
              ) : (
                <Badge variant="outline" className="flex items-center space-x-1">
                  <User className="h-3 w-3" />
                  <span>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</span>
                </Badge>
              )}
            </div>
          </div>
        </div>
      </div>

      {/* –ö–æ–Ω—Ç–µ–Ω—Ç */}
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        {/* –ï—Å–ª–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É */}
        {user.hasSpecialistProfile && user.stats && (
          <div className="mb-6">
            <DashboardStats
              profileViews={user.stats.profileViews}
              contactViews={user.stats.contactViews}
              consultationRequests={user.stats.consultationRequests}
              orders={user.stats.orders || 0}
            />
          </div>
        )}

        <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
          {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è + –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–µ–∫—Ü–∏–∏ –¥–ª—è —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ */}
          <div className="lg:col-span-2 space-y-6">
            {/* –ï—Å–ª–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –ø—Ä–æ—Ñ–∏–ª—è */}
            {user.hasSpecialistProfile && user.stats && user.tasks && (
              <ProfileCompletionCard
                completionPercentage={user.stats.completionPercentage}
                tasks={user.tasks}
              />
            )}

            {/* –£—Å–ª—É–≥–∏ (–¥–ª—è —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤) - –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–æ –≤ –æ—Å–Ω–æ–≤–Ω—É—é –∫–æ–ª–æ–Ω–∫—É */}
            {user.hasSpecialistProfile && user.services && (
              <Card>
                <CardHeader>
                  <CardTitle className="text-lg">üíº –ú–æ–∏ —É—Å–ª—É–≥–∏</CardTitle>
                </CardHeader>
                <CardContent>
                  <ServicesList 
                    services={user.services}
                    specialistSlug={user.hasSpecialistProfile ? user.specialistProfile?.slug : undefined}
                  />
                </CardContent>
              </Card>
            )}

            {/* –õ–∏—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center space-x-2">
                  <User className="h-5 w-5" />
                  <span>–õ–∏—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</span>
                </CardTitle>
                <CardDescription>
                  –í–∞—à–∏ –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
                </CardDescription>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <div>
                    <label className="text-sm font-medium text-gray-500">–ò–º—è</label>
                    <p className="text-lg font-semibold text-gray-900">{user.firstName}</p>
                  </div>
                  <div>
                    <label className="text-sm font-medium text-gray-500">–§–∞–º–∏–ª–∏—è</label>
                    <p className="text-lg font-semibold text-gray-900">{user.lastName}</p>
                  </div>
                </div>
                
                <div>
                  <label className="text-sm font-medium text-gray-500 flex items-center space-x-1">
                    <Phone className="h-4 w-4" />
                    <span>–¢–µ–ª–µ—Ñ–æ–Ω</span>
                  </label>
                  <p className="text-lg font-semibold text-gray-900">{user.phone}</p>
                </div>
                
                {user.email && (
                  <div>
                    <label className="text-sm font-medium text-gray-500 flex items-center space-x-1">
                      <Mail className="h-4 w-4" />
                      <span>Email</span>
                    </label>
                    <p className="text-lg font-semibold text-gray-900">{user.email}</p>
                  </div>
                )}
              </CardContent>
            </Card>
          </div>

          {/* –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å */}
          <div className="space-y-6">
            {/* –ê–≤–∞—Ç–∞—Ä */}
            <Card>
              <CardContent className="pt-6">
                <div className="flex flex-col items-center space-y-4">
                  {user.avatar ? (
                    <img
                      src={user.avatar}
                      alt={fullName}
                      className="h-24 w-24 rounded-full object-cover border-4 border-white shadow-lg"
                    />
                  ) : (
                    <div className="h-24 w-24 rounded-full bg-gradient-to-br from-blue-500 to-purple-600 flex items-center justify-center text-white text-2xl font-bold shadow-lg">
                      {user.firstName.charAt(0)}{user.lastName.charAt(0)}
                    </div>
                  )}
                  <div className="text-center">
                    <h3 className="text-lg font-semibold text-gray-900">{fullName}</h3>
                    <p className="text-sm text-gray-500">
                      {user.hasSpecialistProfile ? '–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç' : '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}
                    </p>
                  </div>
                </div>
              </CardContent>
            </Card>

            {/* –ë–∞–ª–∞–Ω—Å –±–∞–ª–ª–æ–≤ */}
            <BalanceWidgetWrapper />

            {/* –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
            <QuickActions 
              slug={user.hasSpecialistProfile ? user.specialistProfile?.slug : undefined}
              newRequestsCount={user.newRequestsCount || 0}
              newOrdersCount={user.newOrdersCount || 0}
              isSpecialist={user.hasSpecialistProfile}
            />

            {/* –ö–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞ */}
            <Card>
              <CardContent className="pt-6">
                <LogoutButton />
              </CardContent>
            </Card>
          </div>
        </div>
      </div>
    </div>
  )
}
