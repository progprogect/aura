const { PrismaClient } = require('@prisma/client')

const prisma = new PrismaClient({
  datasources: {
    db: {
      url: "postgresql://postgres:AEXabgipqvhbLSwunyuZfLBgwtZsgHjg@hopper.proxy.rlwy.net:40277/railway"
    }
  }
})

async function updateMedicineEmoji() {
  try {
    console.log('üîß –û–±–Ω–æ–≤–ª—è–µ–º —ç–º–æ–¥–∑–∏ –¥–ª—è –º–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏...')
    
    // –í–∞—Ä–∏–∞–Ω—Ç—ã —ç–º–æ–¥–∑–∏ –¥–ª—è –º–µ–¥–∏—Ü–∏–Ω—ã
    const emojiOptions = [
      'ü©∫', // —Å—Ç–µ—Ç–æ—Å–∫–æ–ø
      'üë®‚Äç‚öïÔ∏è', // –≤—Ä–∞—á –º—É–∂—á–∏–Ω–∞
      'üë©‚Äç‚öïÔ∏è', // –≤—Ä–∞—á –∂–µ–Ω—â–∏–Ω–∞
      'üè•', // –±–æ–ª—å–Ω–∏—Ü–∞
      'üíä', // —Ç–∞–±–ª–µ—Ç–∫–∏
      'ü©π', // –ø–ª–∞—Å—Ç—ã—Ä—å
      'üßë‚Äç‚öïÔ∏è', // –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π —Ä–∞–±–æ—Ç–Ω–∏–∫ (–Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π)
    ]
    
    console.log('üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã —ç–º–æ–¥–∑–∏ –¥–ª—è –º–µ–¥–∏—Ü–∏–Ω—ã:')
    emojiOptions.forEach((emoji, index) => {
      console.log(`${index + 1}. ${emoji}`)
    })
    
    // –í—ã–±–∏—Ä–∞–µ–º —Å—Ç–µ—Ç–æ—Å–∫–æ–ø –∫–∞–∫ –Ω–∞–∏–±–æ–ª–µ–µ –ø–æ–¥—Ö–æ–¥—è—â–∏–π
    const newEmoji = 'ü©∫'
    
    console.log(`\nüîÑ –û–±–Ω–æ–≤–ª—è–µ–º —ç–º–æ–¥–∑–∏ —Å "‚öïÔ∏è" –Ω–∞ "${newEmoji}"...`)
    
    const result = await prisma.category.update({
      where: { key: 'medicine' },
      data: { emoji: newEmoji }
    })
    
    console.log('‚úÖ –≠–º–æ–¥–∑–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!')
    console.log(`   –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${result.name}`)
    console.log(`   –ù–æ–≤–æ–µ —ç–º–æ–¥–∑–∏: "${result.emoji}"`)
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const updated = await prisma.category.findUnique({
      where: { key: 'medicine' },
      select: { key: true, name: true, emoji: true }
    })
    
    console.log('\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç:')
    console.log(`   –ö–ª—é—á: ${updated.key}`)
    console.log(`   –ù–∞–∑–≤–∞–Ω–∏–µ: ${updated.name}`)
    console.log(`   –≠–º–æ–¥–∑–∏: "${updated.emoji}"`)
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message)
  } finally {
    await prisma.$disconnect()
  }
}

updateMedicineEmoji()
